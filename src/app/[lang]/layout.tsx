import type { Metadata } from "next";
import { Inter, Open_Sans } from "next/font/google";
import "./globals.css";
import { LocaleKeysType, locales } from "../i18n";
import { ReduxProvider } from "@/component/ReduxProvide";
import { Header } from "@/component/Header";

const openSans = Open_Sans({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export type ServerSidePageType = {
  params:{
    lang: LocaleKeysType;
  };
  searchParams?:{
    [query:string]: string;
  }
};

export default function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: ServerSidePageType["params"];
}>) {

  const {lang} = params;

  if(!locales.includes(lang)){
    return <></>;
  }

  return (
    <html lang={lang} >
      <head>
        <meta name="viewport" content="width=device-width,initial-scale=1, maximum-scale=1"/>
      </head>
      <body className={`${openSans.className} bg-MainBG bg-opacity-30 relative`}>
        <ReduxProvider
          lang={lang}
        >
          <Header />
            {children}
        </ReduxProvider>
      </body>
    </html>
  );
}
